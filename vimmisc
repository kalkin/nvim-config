" Information 
" {{{
" vim:foldmarker={{{,}}} tw=80 ft=vim
" Last Modified [ 2010-09-16 ]
" 
" This file contains all configurations which doesn't fit elsewhere
"
" }}}

" Use pathogen to easily modify the runtime path to include all
" plugins under the ~/.vim/bundle directory
execute pathogen#infect()

" Syntax on!
syntax on

" Filetype plugin on!
filetype plugin on

colorscheme solarized

let mapleader=","

" Needed for loading own snippets and not the snipmate snippets
let g:snippets_dir="~/.vim/snippets"

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1

" Default: 0
" If enabled, syntastic will do syntax checks when buffers are first loaded as
" well as on saving >
let g:syntastic_check_on_open=1

let g:syntastic_enable_signs=1

let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'

let g:syntastic_auto_loc_list=1

let g:syntastic_perl6_lib_path= ['lib']

"" Hardcode handling for Perl 6. We never use perl 5 so it does not matter
let test#perl#prove#options = "--exec 'perl6 -I lib'"

autocmd FileType go autocmd BufWritePre <buffer> Fmt

" save and reload the folds see also :help 'views-sessions
au BufWinLeave * mkview
au BufWinEnter * silent loadview

" source https://www.linux.com/learn/tutorials/442438-vim-tips-folding-fun
function! NeatFoldText() "{{{
  let line = ' ' . substitute(getline(v:foldstart), '^\s*"\?\s*\|\s*"\?\s*{{' . '{\d*\s*', '', 'g') . ' '
  let lines_count = v:foldend - v:foldstart + 1
  let lines_count_text = '| ' . printf("%10s", lines_count . ' lines') . ' |'
  let foldchar = matchstr(&fillchars, 'fold:\zs.')
  let foldtextstart = strpart('+' . repeat(foldchar, v:foldlevel*2) . line, 0, (winwidth(0)*2)/3)
  let foldtextend = lines_count_text . repeat(foldchar, 8)
  let foldtextlength = strlen(substitute(foldtextstart . foldtextend, '.', 'x', 'g')) + &foldcolumn
  return foldtextstart . repeat(foldchar, winwidth(0)-foldtextlength) . foldtextend
endfunction
set foldtext=NeatFoldText()
" }}}
